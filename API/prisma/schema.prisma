generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Setor {
  id                     Int                      @id @default(autoincrement())
  nome                   String                   @unique
  HcrAirConditioning     HcrAirConditioning[]
  HcrComputer            HcrComputer[]
  HcrEquipamentosMedicos HcrEquipamentosMedicos[]
  HcrMobilia             HcrMobilia[]
  HcrPrinter             HcrPrinter[]
  localizacoes           Localizacao[]
  os                     OrdemServico[]
}

model Localizacao {
  id                     Int                      @id @default(autoincrement())
  nome                   String                   
  setorId                Int?
  HcrAirConditioning     HcrAirConditioning[]
  HcrComputer            HcrComputer[]
  HcrEquipamentosMedicos HcrEquipamentosMedicos[]
  HcrMobilia             HcrMobilia[]
  HcrPrinter             HcrPrinter[]
  setor                  Setor?                   @relation(fields: [setorId], references: [id])
}

model Usuario {
  id           Int            @id @default(autoincrement())
  nome         String
  email        String         @unique
  senha        String
  papel        PapelUsuario
  tecnicoId    Int?
  OrdemServico OrdemServico[]
  tecnico      Tecnico?       @relation(fields: [tecnicoId], references: [id])
  movimentacoes StockMovement[]
}

model GrupoManutencao {
  id        Int               @id @default(autoincrement())
  nome      String
  descricao String?
  tecnicos  Tecnico[]
  tipos     TipoEquipamento[]
}

model TipoEquipamento {
  id                     Int                      @id @default(autoincrement())
  nome                   String                   @unique
  grupoId                Int?
  HcrAirConditioning     HcrAirConditioning[]
  HcrComputer            HcrComputer[]
  HcrEquipamentosMedicos HcrEquipamentosMedicos[]
  HcrMobilia             HcrMobilia[]
  HcrPrinter             HcrPrinter[]
  OrdemServico           OrdemServico[]
  grupo                  GrupoManutencao?         @relation(fields: [grupoId], references: [id])
}

model Tecnico {
  id             Int             @id @default(autoincrement())
  nome           String
  email          String          @unique
  telefone       String
  cpf            String?         @unique
  matricula      String?
  admissao       DateTime?
  ativo          Boolean         @default(true)
  telegramChatId String?
  grupoId        Int
  os             OrdemServico[]
  grupo          GrupoManutencao @relation(fields: [grupoId], references: [id])
  Usuario        Usuario[]
}

model OrdemServico {
  id                Int             @id @default(autoincrement())
  descricao         String
  tipoEquipamentoId Int
  equipamentoId     Int
  tecnicoId         Int?
  solicitanteId     Int
  status            StatusOS        @default(ABERTA)
  criadoEm          DateTime        @default(now())
  finalizadoEm      DateTime?
  valorManutencao   Decimal?
  resolucao         String?
  arquivos          String[]
  preventiva        Boolean         
  dataAgendada      DateTime?       // Data para manutenção preventiva
  recorrencia       Recorrencia?    @default(NENHUMA)
  intervaloDias     Int?            // Se recorrencia = PERSONALIZADA
  setorId           Int?
  Setor             Setor?          @relation(fields: [setorId], references: [id])
  solicitante       Usuario         @relation(fields: [solicitanteId], references: [id])
  tecnico           Tecnico?        @relation(fields: [tecnicoId], references: [id])
  tipoEquipamento   TipoEquipamento @relation(fields: [tipoEquipamentoId], references: [id])
  equipamento       HcrEquipamentosMedicos @relation("EquipamentoOrdens", fields: [equipamentoId], references: [id])
}

model HcrComputer {
  id                 Int             @id @default(autoincrement())
  nPatrimonio        String
  nomePC             String
  ip                 String?
  sistemaOperacional String
  tipoEquipamentoId  Int
  localizacaoId      Int
  setorId            Int
  localizacao        Localizacao     @relation(fields: [localizacaoId], references: [id])
  setor              Setor           @relation(fields: [setorId], references: [id])
  tipoEquipamento    TipoEquipamento @relation(fields: [tipoEquipamentoId], references: [id])
}

model HcrPrinter {
  id                Int             @id @default(autoincrement())
  nPatrimonio       String
  ip                String?
  marca             String
  modelo            String
  tipoEquipamentoId Int
  localizacaoId     Int
  setorId           Int
  localizacao       Localizacao     @relation(fields: [localizacaoId], references: [id])
  setor             Setor           @relation(fields: [setorId], references: [id])
  tipoEquipamento   TipoEquipamento @relation(fields: [tipoEquipamentoId], references: [id])
}

model HcrAirConditioning {
  id                Int              @id @default(autoincrement())
  nPatrimonio       String
  nControle         String
  marca             String
  modelo            String
  tipoEquipamentoId Int?
  localizacaoId     Int?
  setorId           Int?
  BTUS              String
  numeroSerie       String?
  obs               String?
  localizacao       Localizacao?     @relation(fields: [localizacaoId], references: [id])
  setor             Setor?           @relation(fields: [setorId], references: [id])
  tipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  dataCompra        DateTime?
  inicioGarantia    DateTime?
  terminoGarantia   DateTime?
  notaFiscal        String?
  valorCompra       Float?
  arquivos         String[]  @default([])
}

model HcrMobilia {
  id                Int             @id @default(autoincrement())
  nPatrimonio       String
  nome              String
  estado            String
  obs               String?
  valorCompra       Float?
  valorAtual        Float?
  taxaDepreciacao   Float?          // em porcentagem, ex: 10 para 10% ao ano
  dataCompra        DateTime?
  inicioGarantia    DateTime?
  terminoGarantia   DateTime?
  notaFiscal        String?
  tipoEquipamentoId Int
  localizacaoId     Int
  setorId           Int
  localizacao       Localizacao     @relation(fields: [localizacaoId], references: [id])
  setor             Setor           @relation(fields: [setorId], references: [id])
  tipoEquipamento   TipoEquipamento @relation(fields: [tipoEquipamentoId], references: [id])
}

model HcrEquipamentosMedicos {
  id                Int              @id @default(autoincrement())
  numeroPatrimonio  String?
  numeroSerie       String?
  numeroAnvisa      String?
  nomeEquipamento   String
  modelo            String?
  valorCompra       Float?
  dataCompra        DateTime?
  inicioGarantia    DateTime?
  terminoGarantia   DateTime?
  notaFiscal        String?
  obs               String?
  setorId           Int?
  localizacaoId     Int?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime?        @updatedAt
  tipoEquipamentoId Int?
  fabricante        String?
  identificacao     String?
  localizacao       Localizacao?     @relation(fields: [localizacaoId], references: [id])
  setor             Setor?           @relation(fields: [setorId], references: [id])
  tipoEquipamento   TipoEquipamento? @relation(fields: [tipoEquipamentoId], references: [id])
  arquivos         String[]  @default([])
  ordensServico OrdemServico[] @relation("EquipamentoOrdens")
}

enum PapelUsuario {
  admin
  cadastro
  tecnico
  visualizador
  usuario_comum
}

enum StatusOS {
  ABERTA
  EM_ANDAMENTO
  CONCLUIDA
  CANCELADA
}
enum Prioridade {
  BAIXO
  MEDIO
  ALTO
  URGENTE
}

enum StatusChamado {
  ABERTO
  EM_ANDAMENTO
  FECHADO
  CANCELADO
}
enum Recorrencia {
  NENHUMA      // para corretivas
  DIARIA
  SEMANAL
  QUINZENAL
  MENSAL
  ANUAL
  PERSONALIZADA // caso queira usar dias específicos (ex: 15 dias)
}

model Chamado {
  id              Int        @id @default(autoincrement())
  numero          Int        @unique
  descricao       String
  status          String     @default("Aberto")
  dataCriacao     DateTime   @default(now())
  dataFinalizacao DateTime?
  prioridade      Prioridade @default(MEDIO)
  SistemaId       Int?
  Sistema         Sistema?   @relation(fields: [SistemaId], references: [id])
}

model Sistema {
  id      Int      @id @default(autoincrement())
  nome    String   @unique
  chamados Chamado[]
}

model Sobreaviso {
  id               Int      @id @default(autoincrement())
  data            DateTime
  horaInicio      DateTime
  horaFim         DateTime
  motivo          String
  aSerFeito       String
  colaborador     Int
  observacoes     String?
  criadoEm        DateTime @default(now())
  atualizadoEm    DateTime @updatedAt
}

model Incidente {
  id             Int      @id @default(autoincrement())
  data           DateTime
  motivo         String
  quemRelatou    String
  local          String
  descricao      String
  oQueFoiFeito   String?    // Campo opcional
  criadoEm       DateTime   @default(now())
  atualizadoEm   DateTime   @updatedAt
}


model ProductCategory {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  produtos Product[]
}

model Product {
  id              Int              @id @default(autoincrement())
  nome            String
  descricao       String?
  categoriaId     Int
  categoria       ProductCategory  @relation(fields: [categoriaId], references: [id])
  quantidade      Int              @default(0)
  quantidadeMin   Int              @default(0)
  movimentacoes   StockMovement[]
}

model StockMovement {
  id          Int       @id @default(autoincrement())
  tipo        TipoMovimento
  produtoId   Int
  produto     Product   @relation(fields: [produtoId], references: [id])
  quantidade  Int
  motivo      String?
  data        DateTime  @default(now())
  usuarioId   Int
  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
}


enum TipoMovimento {
  ENTRADA
  SAIDA
}